/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package agwnia;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Vrachno
 */
public class GUI extends javax.swing.JFrame {

    Card throwingCard = null;
    int tmpI;
    public GameLogic game;
    int players, nog, nop;
    gameType type;
    Images im;
    private ArrayList<JButton> cardButtons, suitButtons;
    private ArrayList<Card> cards;
    JLabel label2, label3, label4;
    JInternalFrame noOfPlayers, typeOfGame, noOfGamesFrame, noOfPointsFrame;
    JTextField jTextField1, jTextField2;
    // JInternalFrame typeOfGame;
    JComboBox jComboBox1, jComboBox2;
    private CardActionListener listener;
    //CardLayout cl;
    GridLayout gl, gl2;
    FlowLayout fl;
    ImageIcon backVert, backHor;
    Card tmpC;
    JButton tmpB;
    Player player;
    //private JPanel chooseSuit;

    /**
     * Creates new form GUI
     */
    public GUI() {


        initComponents();
        playerChoose();


        label2 = new JLabel();
        jPanel1.add(label2);
        label2.setSize(500, 640);
        label2.setVisible(true);
        label3 = new JLabel();
        jPanel1.add(label3);
        label3.setLocation(72, 0);
        label3.setSize(500, 640);
        label3.setVisible(true);
        label4 = new JLabel();
        jPanel1.add(label4);
        label4.setLocation(144, 0);
        label4.setSize(500, 640);
        label4.setVisible(true);
        gl = new GridLayout(1, 7);
        gl2 = new GridLayout(2, 2);
        fl = new FlowLayout();
        backVert = new ImageIcon(System.getProperty("user.dir") + "//src//card pics//b1fv.png");
        backHor = new ImageIcon(System.getProperty("user.dir") + "//src//card pics//b1fh.png");
        listener = new CardActionListener();



        // pics();



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        openCardImage = new javax.swing.JLabel();
        remainingCardsImage = new javax.swing.JLabel();
        rightRemainingLabel = new javax.swing.JLabel();
        leftRemainingLabel = new javax.swing.JLabel();
        topRemainingLabel = new javax.swing.JLabel();
        top = new javax.swing.JLabel();
        left = new javax.swing.JLabel();
        right = new javax.swing.JLabel();
        bottom = new javax.swing.JLabel();
        passButton = new javax.swing.JButton();
        suitChooseFrame = new javax.swing.JInternalFrame();
        suitChooser = new javax.swing.JPanel();
        heartsButton = new javax.swing.JButton();
        diamondsButton = new javax.swing.JButton();
        spadesButton = new javax.swing.JButton();
        clubstButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agonia");
        setBackground(new java.awt.Color(51, 153, 0));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(51, 153, 0));

        jPanel1.setBackground(new java.awt.Color(0, 153, 0));

        openCardImage.setAlignmentY(0.0F);

        rightRemainingLabel.setFont(new java.awt.Font("Tahoma", 0, 24));

        leftRemainingLabel.setFont(new java.awt.Font("Tahoma", 0, 24));

        topRemainingLabel.setFont(new java.awt.Font("Tahoma", 0, 24));

        bottom.setBackground(new java.awt.Color(240, 226, 226));

        passButton.setVisible(false);
        passButton.setFont(new java.awt.Font("Tahoma", 0, 17));
        passButton.setText("Draw");
        passButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passButtonActionPerformed(evt);
            }
        });

        suitChooseFrame.setTitle("Choose suit");
        suitChooseFrame.setPreferredSize(new java.awt.Dimension(301, 301));
        suitChooseFrame.setVisible(true);

        suitChooser.setPreferredSize(new java.awt.Dimension(300, 300));

        heartsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/card pics/suit1.png"))); // NOI18N
        heartsButton.setPreferredSize(new java.awt.Dimension(75, 75));
        heartsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartsButtonActionPerformed(evt);
            }
        });

        diamondsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/card pics/suit2.png"))); // NOI18N
        diamondsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diamondsButtonActionPerformed(evt);
            }
        });

        spadesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/card pics/suit0.png"))); // NOI18N
        spadesButton.setPreferredSize(new java.awt.Dimension(75, 75));
        spadesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spadesButtonActionPerformed(evt);
            }
        });

        clubstButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/card pics/suit3.png"))); // NOI18N
        clubstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clubstButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout suitChooserLayout = new javax.swing.GroupLayout(suitChooser);
        suitChooser.setLayout(suitChooserLayout);
        suitChooserLayout.setHorizontalGroup(
            suitChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suitChooserLayout.createSequentialGroup()
                .addGroup(suitChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(suitChooserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(diamondsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, suitChooserLayout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(spadesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(suitChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(heartsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clubstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        suitChooserLayout.setVerticalGroup(
            suitChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suitChooserLayout.createSequentialGroup()
                .addGroup(suitChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(suitChooserLayout.createSequentialGroup()
                        .addComponent(spadesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(diamondsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(suitChooserLayout.createSequentialGroup()
                        .addComponent(heartsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clubstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout suitChooseFrameLayout = new javax.swing.GroupLayout(suitChooseFrame.getContentPane());
        suitChooseFrame.getContentPane().setLayout(suitChooseFrameLayout);
        suitChooseFrameLayout.setHorizontalGroup(
            suitChooseFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, suitChooseFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(suitChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        suitChooseFrameLayout.setVerticalGroup(
            suitChooseFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suitChooseFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(suitChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(439, 439, 439)
                        .addComponent(top, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 385, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bottom, javax.swing.GroupLayout.PREFERRED_SIZE, 1022, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(405, 405, 405)
                                        .addComponent(openCardImage, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(remainingCardsImage, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(passButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(leftRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(right, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rightRemainingLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 399, Short.MAX_VALUE)
                .addComponent(suitChooseFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(357, 357, 357))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(top, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(topRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(suitChooseFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(leftRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rightRemainingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(remainingCardsImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(openCardImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bottom, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(passButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(19, 19, 19))
        );

        openCardImage.getAccessibleContext().setAccessibleParent(jPanel1);
        suitChooseFrame.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passButtonActionPerformed
        // TODO add your handling code here:
        if (game.hasPlayerDrawCard()) {
            System.out.println("πηγες πασο");
            game.playerPlays(null);
            passButton.setText("Draw");

        } else {
            System.out.println("τράβηξες φύλλο");
            game.playerPlays(null);
            
            ArrayList<Card> list = game.getPlayers().get(0).hand.getList();
            JButton card = new JButton(list.get(list.size()-1).getPic());

            card.setPreferredSize(new Dimension(backVert.getIconWidth(), backVert.getIconHeight()));
            card.addActionListener(listener);
            cardButtons.add(card);
            card.setActionCommand(Integer.toString(list.size()-1));

            bottom.add(card);
            System.out.println(list.get(list.size()-1));
            passButton.setText("Pass");
            
        }
        NextPlayerPlays();

        bottom.updateUI();
        

//         game.setNextPlayer();
    }//GEN-LAST:event_passButtonActionPerformed

    private void spadesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spadesButtonActionPerformed
        // TODO add your handling code here:
        game.setSuit(Suit.SPADES);
        suitChooseFrame.setVisible(false);
        NextPlayerPlays();
    }//GEN-LAST:event_spadesButtonActionPerformed

    private void heartsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartsButtonActionPerformed
        // TODO add your handling code here:
        game.setSuit(Suit.HEARTS);
        suitChooseFrame.setVisible(false);
        NextPlayerPlays();

    }//GEN-LAST:event_heartsButtonActionPerformed

    private void diamondsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diamondsButtonActionPerformed
        // TODO add your handling code here:
        game.setSuit(Suit.DIAMONDS);
        suitChooseFrame.setVisible(false);
        NextPlayerPlays();

    }//GEN-LAST:event_diamondsButtonActionPerformed

    private void clubstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clubstButtonActionPerformed
        // TODO add your handling code here:
        game.setSuit((Suit.CLUBS));
        suitChooseFrame.setVisible(false);
        NextPlayerPlays();

    }//GEN-LAST:event_clubstButtonActionPerformed
    
    
    public void playerChoose() {


        //jInternalFrame1 = new JInternalFrame();
        JLabel jLabel1 = new JLabel();
        JButton jButton1 = new JButton();
        // jComboBox1 = new JComboBox();



        jLabel1.setText("Choose number of bots:");
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        noOfPlayers = new javax.swing.JInternalFrame();
        noOfPlayers.setVisible(true);
        noOfPlayers.setForeground(java.awt.Color.white);
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"1", "2", "3"}));
        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(noOfPlayers.getContentPane());
        noOfPlayers.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jInternalFrame1Layout.createSequentialGroup().addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jInternalFrame1Layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jInternalFrame1Layout.createSequentialGroup().addGap(92, 92, 92).addComponent(jButton1))).addContainerGap(22, Short.MAX_VALUE)));
        jInternalFrame1Layout.setVerticalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jInternalFrame1Layout.createSequentialGroup().addGap(29, 29, 29).addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addComponent(jButton1).addContainerGap(80, Short.MAX_VALUE)));

        jPanel1.add(noOfPlayers);
        noOfPlayers.pack();
        noOfPlayers.setLocation(jPanel1.getWidth() / 3, jPanel1.getHeight() / 3);


    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:       

        players = Integer.parseInt(jComboBox1.getSelectedItem().toString());
        noOfPlayers.dispose();
        gameType();

    }

    public void gameType() {
        //anoigei to para8yro dialogou gia epilolgh eidous paixnidiou

        typeOfGame = new javax.swing.JInternalFrame();
        typeOfGame.setVisible(true);
        jComboBox2 = new javax.swing.JComboBox();
        JButton gtOkButton = new javax.swing.JButton();
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Number of Games", "Number of Points"}));
        typeOfGame.setTitle("Game Type");
        typeOfGame.setVisible(true);
        JLabel jLabel1 = new javax.swing.JLabel();


        jLabel1.setText("Choose game type:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Number of Games", "Number of Points"}));


        gtOkButton.setText("OK");
        gtOkButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gtOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout typeOfGameLayout = new javax.swing.GroupLayout(typeOfGame.getContentPane());
        typeOfGame.getContentPane().setLayout(typeOfGameLayout);
        typeOfGameLayout.setHorizontalGroup(
                typeOfGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, typeOfGameLayout.createSequentialGroup().addContainerGap().addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE).addGap(18, 18, 18).addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(typeOfGameLayout.createSequentialGroup().addGap(146, 146, 146).addComponent(gtOkButton).addGap(0, 0, Short.MAX_VALUE)));
        typeOfGameLayout.setVerticalGroup(
                typeOfGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(typeOfGameLayout.createSequentialGroup().addGap(27, 27, 27).addGroup(typeOfGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(28, 28, 28).addComponent(gtOkButton).addContainerGap(15, Short.MAX_VALUE)));
        jPanel1.add(typeOfGame);
        typeOfGame.pack();
        typeOfGame.setLocation(jPanel1.getWidth() / 3, jPanel1.getHeight() / 3);

    }

    private void gtOkButtonActionPerformed(java.awt.event.ActionEvent evt) {

        //diavazei thn epilogh tou paikth gia to eidos tou paixnidiou kai odhgei ston kathorismo twn dedomenwn
        String type = (String) jComboBox2.getSelectedItem();
        if (type == "Number of Games") {
            this.type = gameType.GamesOnly;
            chooseNoOfGames();
            typeOfGame.dispose();
        } else {
            this.type = gameType.PointsOnly;
            chooseNoOfPoints();
            typeOfGame.dispose();
        }
        // TODO add your handling code here:
    }

    public void chooseNoOfGames() {

        noOfGamesFrame = new javax.swing.JInternalFrame();
        JLabel jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        JButton nogOkButton = new javax.swing.JButton();

        noOfGamesFrame.setTitle("Number of Games");
        noOfGamesFrame.setVisible(true);

        jLabel1.setText("Number of games to end:");



        nogOkButton.setText("OK");
        nogOkButton.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nogOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout noOfGamesFrameLayout = new javax.swing.GroupLayout(noOfGamesFrame.getContentPane());
        noOfGamesFrame.getContentPane().setLayout(noOfGamesFrameLayout);
        noOfGamesFrameLayout.setHorizontalGroup(
                noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(noOfGamesFrameLayout.createSequentialGroup().addContainerGap().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE).addContainerGap()).addGroup(noOfGamesFrameLayout.createSequentialGroup().addGap(119, 119, 119).addComponent(nogOkButton).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        noOfGamesFrameLayout.setVerticalGroup(
                noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(noOfGamesFrameLayout.createSequentialGroup().addContainerGap().addGroup(noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(nogOkButton).addContainerGap()));

        jPanel1.add(noOfGamesFrame);
        noOfGamesFrame.pack();
        noOfGamesFrame.setLocation(jPanel1.getWidth() / 3, jPanel1.getHeight() / 3);

    }

    private void nogOkButtonActionPerformed(java.awt.event.ActionEvent evt) {


        if ((isInteger(jTextField1.getText()) == true) && (Integer.parseInt(jTextField1.getText()) > 0)) {

            nog = Integer.parseInt(jTextField1.getText());
            noOfGamesFrame.dispose();
            start();
        } else {

            noOfGamesFrame.dispose();
            chooseNoOfGames();
        }

    }

    public void chooseNoOfPoints() {

        noOfPointsFrame = new javax.swing.JInternalFrame();
        JLabel jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        JButton nogOkButton = new javax.swing.JButton();

        noOfPointsFrame.setTitle("Number of Points");
        noOfPointsFrame.setVisible(true);

        jLabel1.setText("Number of points to end:");



        nogOkButton.setText("OK");
        nogOkButton.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nopOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout noOfGamesFrameLayout = new javax.swing.GroupLayout(noOfPointsFrame.getContentPane());
        noOfPointsFrame.getContentPane().setLayout(noOfGamesFrameLayout);
        noOfGamesFrameLayout.setHorizontalGroup(
                noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(noOfGamesFrameLayout.createSequentialGroup().addContainerGap().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE).addContainerGap()).addGroup(noOfGamesFrameLayout.createSequentialGroup().addGap(119, 119, 119).addComponent(nogOkButton).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        noOfGamesFrameLayout.setVerticalGroup(
                noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(noOfGamesFrameLayout.createSequentialGroup().addContainerGap().addGroup(noOfGamesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(nogOkButton).addContainerGap()));

        jPanel1.add(noOfPointsFrame);
        noOfPointsFrame.pack();
        noOfPointsFrame.setLocation(jPanel1.getWidth() / 3, jPanel1.getHeight() / 3);

    }

    private void nopOkButtonActionPerformed(java.awt.event.ActionEvent evt) {


        if ((isInteger(jTextField2.getText()) == true) && (Integer.parseInt(jTextField2.getText()) > 0)) {

            nop = Integer.parseInt(jTextField2.getText());
            noOfPointsFrame.dispose();
            start();
        } else {

            noOfPointsFrame.dispose();
            chooseNoOfPoints();
        }

    }

    public static boolean isInteger(String s) {
        //elegxos gia int
        try {
            Integer.parseInt(s);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    private void showInfo() {
        //TODO emfanizontai opencard & kartes paikth & poses kartes exoun oi upoloipoi & ti erixe o kathenas

        //System.out.println(game.getTopCard());
        System.out.println();
        // System.out.println(game.closedCards.im.getPics().get(4));

        switch (players) {
            case 1:
                leftRemainingLabel.setVisible(false);
                rightRemainingLabel.setVisible(false);
                topRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(1).hand.list.size()));
                break;
            case 2:
                rightRemainingLabel.setVisible(false);
                leftRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(1).hand.list.size()));
                topRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(2).hand.list.size()));
                break;
            case 3:
                leftRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(1).hand.list.size()));
                topRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(2).hand.list.size()));
                rightRemainingLabel.setText("Cards Left: " + String.valueOf(game.getPlayers().get(3).hand.list.size()));
                break;

        }
        /*for (int i=0;i<game.getPlayers().get(0).hand.list.size();i++){
        
        JButton card = new JButton(game.getPlayers().get(0).hand.list.get(i).getPic());
        tmp = game.getPlayers().get(0).hand.list.get(i);
        
        card.setPreferredSize(new Dimension(backVert.getIconWidth(),backVert.getIconHeight()));
        card.addActionListener(listener);
        cardButtons.add(card);
        //  cards.add(CardAt(i));
        /* card.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
        throwCard(evt,tmp,tmpI);
        }
        });
        bottom.add(card); 
        System.out.println(game.getPlayers().get(0).hand.list.get(i));
        }
         */



        //openCardImage.setIcon(game.getTopCard());
        // openCardImage.setIcon(game.getTopCard().getPic());

    }

    private void showOpenedCard() {

        openCardImage.setIcon(game.getTopCard().getPic());
        
//        openCardImage.revalidate();
//        openCardImage.repaint();
//        openCardImage.updateUI();
        System.out.println("opend card = " + game.getTopCard());
    }

    private void showHumanHand() {
        cardButtons = new ArrayList();
        for (int i = 0; i < game.getPlayers().get(0).hand.list.size(); i++) {

            JButton card = new JButton(game.getPlayers().get(0).hand.getList().get(i).getPic());

            card.setPreferredSize(new Dimension(backVert.getIconWidth(), backVert.getIconHeight()));
            card.addActionListener(listener);
            cardButtons.add(card);
            card.setActionCommand(Integer.toString(i));

            bottom.add(card);
            System.out.println(game.getPlayers().get(0).hand.list.get(i));
        }

    }

    private void humanCardAce() {

        suitChooseFrame.setVisible(true);

      
        
    }
//
//    private void hcaActionPerformed(java.awt.event.ActionEvent evt) {
//
//        for (JButton button : suitButtons) {
//            if (button.getText().equals(evt.getActionCommand())) {
//                button.setEnabled(false);
//                int suit = suitButtons.indexOf(button);
//                switch (suit) {
//                    case 0:
//                        game.setSuit(Suit.SPADES);
//                        break;
//                    case 1:
//                        game.setSuit(Suit.HEARTS);
//                        break;
//                    case 2:
//                        game.setSuit(Suit.DIAMONDS);
//                        break;
//                    case 3:
//                        game.setSuit(Suit.CLUBS);
//                        break;
//                }
//            }
//
//        }
//
//
//    }

    public void start() {
        passButton.setVisible(true);
        remainingCardsImage.setIcon(backVert);
        bottom.setLayout(fl);


        switch (players) {
            case 1:
                left.setVisible(false);
                right.setVisible(false);
                top.setIcon(backVert);
                break;
            case 2:
                right.setVisible(false);
                left.setIcon(backHor);
                top.setIcon(backVert);
                break;
            case 3:
                left.setIcon(backHor);
                top.setIcon(backVert);
                right.setIcon(backHor);
                break;

        }
        game = new GameLogic(type, nop, nog, players);
        game.createNewGame();

        player = game.getCurrentPlayer();
        showInfo();
        showOpenedCard();
        showHumanHand();

    }

    public void removeCard(JButton card) {
        bottom.remove(card);
        bottom.updateUI();
    }

    //elegxei an telos paixnisiou. no->next players plays
    private void NextPlayerPlays() {
        if (!game.isEndOfGame()) {
            showInfo();
            showOpenedCard();
            player = game.getCurrentPlayer();
            if (player.getClass() == HumanPlayer.class) {

                System.out.println("paizo!");
                /////////////////////////////////
                



            } else if (player.getClass() == ComputerPlayer.class) {
                System.out.println("paizei to pc");
                throwingCard = ((ComputerPlayer) player).chooseCardToThrow(game.getTopCard());

                game.playerPlays(throwingCard);


                if (throwingCard != null) {
                    openCardImage.setIcon(throwingCard.getPic());
                    System.out.println("to pc epekse: " + throwingCard);
                    if (throwingCard.getRank().equals(Rank.ACE)) {
                        Suit suit = ((ComputerPlayer) player).changeSuit();
                        game.setSuit(suit);
                    }
                    if(player.nCards()==0){//an teleiosan oi kartes toy nikise
                        System.out.println("LOSER :P");
                    }else{//allios paizei o epomenos
                        NextPlayerPlays();
                    }
                } else {//paei paso
                    System.out.println("paso paei");
                    NextPlayerPlays();
                }
//                NextPlayerPlays();
            }
        }
    }

    private class CardActionListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            for (JButton button : cardButtons) {
                if (Integer.toString(cardButtons.indexOf(button)).equals(e.getActionCommand())) {
                    if (GameLogic.MatchRankSuit(player.hand.getCard(cardButtons.indexOf(button)), game.getTopCard())) {
                        
                        throwingCard = player.hand.getCard(cardButtons.indexOf(button));
                        System.out.println(throwingCard);
                        removeCard(button);
                        System.out.println("paizo!");
//                        System.out.println(player.hand);

                        if (throwingCard != null) {
                            game.playerPlays(throwingCard);
                            passButton.setText("Draw");
                        }

                        if (throwingCard != null) {
                            if (throwingCard.getRank().equals(Rank.ACE)) {
                               // Suit suit = null;
                                humanCardAce();
                                if (player.nCards() == 0) {
                                    //get a card if ace is last card
                                    System.out.println("Δεν μπορείς να βγείς με άσο. Πρέπει να τραβήξεις μια κάρτα ακόμα.");
                                }
                            }
                        }

                        if(player.nCards()==0){//an htan teleytaia karta nikise o humanPlayer
                            System.out.println("WINNER");
                        }else{ //allios paizei o epomenos

                            if(throwingCard.getRank()!=Rank.ACE)
                            NextPlayerPlays();
                        }
                    }

                }
            }

        }
    }

    public Card CardAt(int i) {

        return player.hand.getCard(i);

    }

//    private void throwCard(Card card, JButton button) {
    
//        throwingCard = card;
        // System.out.println(throwingCard);
        // player = game.getNextPlayer();
//        openCardImage.setIcon(card.getPic());
        
//        removeCard(button);
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */


        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>



        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bottom;
    private javax.swing.JButton clubstButton;
    private javax.swing.JButton diamondsButton;
    private javax.swing.JButton heartsButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel left;
    private javax.swing.JLabel leftRemainingLabel;
    private javax.swing.JLabel openCardImage;
    private javax.swing.JButton passButton;
    private javax.swing.JLabel remainingCardsImage;
    private javax.swing.JLabel right;
    private javax.swing.JLabel rightRemainingLabel;
    private javax.swing.JButton spadesButton;
    private javax.swing.JInternalFrame suitChooseFrame;
    private javax.swing.JPanel suitChooser;
    private javax.swing.JLabel top;
    private javax.swing.JLabel topRemainingLabel;
    // End of variables declaration//GEN-END:variables
}
